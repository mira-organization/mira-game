name: Main Pipeline

on:
  push:
  pull_request:
    branches:
      - develop

jobs:
  # This runs every time you push.
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev

      - name: Cache Cargo Registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo Build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Build Project
        run: cargo build --release

      - name: Upload Target Artifact
        uses: actions/upload-artifact@v4
        with:
          name: target-dir
          path: target

  # This runs after build and triggered the #[cfg(test)] function in code. (Unit Test)
  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev

      - name: Cache Cargo Registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Download Target Artifact
        uses: actions/download-artifact@v4
        with:
          name: target-dir

      - name: Set Environment Target
        run: echo "CARGO_TARGET_DIR=$(pwd)/target" >> $GITHUB_ENV

      - name: Run Unit Tests
        run: cargo test

  # This runs only if you contain "-build-test-release" in your push commit
  pre-release:
    runs-on: ubuntu-latest
    needs: [ build, test ]
    if: github.event_name == 'pull_request' && github.base_ref == 'develop' && contains(github.event.pull_request.title, '-build-test-release')

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build Pre-Release
        run: cargo build --release

      - name: Publish to GitHub Packages
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cargo publish --allow-dirty --dry-run
