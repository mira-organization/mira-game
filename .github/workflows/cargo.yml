name: Main Pipeline

on:
  push:
  pull_request:
    branches:
      - develop

jobs:
  # This runs every time you push.
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev

      - name: Cache Cargo Registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo Build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Build Project
        run: cargo test --release

  # This runs only if you contain "-build-test-release" in your push commit
  pre-release:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'pull_request' && github.base_ref == 'develop' && contains(github.event.pull_request.title, '-build-test-release')

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev
          cargo install cross

      - name: Cache Cargo Registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Add Rust Target for GNU
        run: rustup target add x86_64-pc-windows-gnu

      - name: Package GNU release
        run: |
          zip -j windows_gnu_release.zip target/x86_64-pc-windows-gnu/release/mira-game.exe ./assets/*
          
      - name: Upload Windows GNU Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./windows_gnu_release.zip
          asset_name: mira-game-windows-gnu.zip
          asset_content_type: application/zip
