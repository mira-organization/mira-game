name: Main Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev

      - name: Cache Cargo Registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo Build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Build Project
        run: cargo test --release

  build-macos:
    name: Build for macOS
    needs: [build-and-test]
    runs-on: macos-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Install macOS Target for Rust
        run: rustup target add x86_64-apple-darwin

      - name: Build macOS Release
        run: cargo build --release --target x86_64-apple-darwin

      - name: Package build
        run: |
          mkdir -p release
          zip -j release/macos_release.zip target/x86_64-apple-darwin/release/mira-game*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos_release
          path: release/macos_release.zip

  build-linux:
    name: Build for Linux
    needs: [build-and-test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev

      - name: Build Linux Release
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - name: Package build
        run: |
          mkdir -p release
          zip -j release/linux_release.zip target/x86_64-unknown-linux-gnu/release/mira-game*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux_release
          path: release/linux_release.zip

  build-windows:
    name: Build for Windows
    needs: [build-and-test]
    runs-on: windows-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Add Windows Target
        run: rustup target add x86_64-pc-windows-gnu

      - name: Build Windows Release
        run: cargo build --release --target x86_64-pc-windows-gnu

      - name: Package build
        run: |
          mkdir -p release
          Compress-Archive -Path target\x86_64-pc-windows-gnu\release\mira-game.exe -DestinationPath release\windows_release.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows_release
          path: release/windows_release.zip

  release:
    name: GitHub Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    needs: [build-linux, build-windows, build-macos]
    steps:
      - name: Download Linux Release Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux_release
          path: ./release/linux

      - name: Download Windows Release Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows_release
          path: ./release/windows

      - name: Download macOS Release Artifact
        uses: actions/download-artifact@v4
        with:
          name: macos_release
          path: ./release/macos

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v0.0.1-$(date +'%Y%m%d%H%M%S')"
          release_name: "Pre-Release v0.0.1"
          draft: false
          prerelease: true

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/linux/linux_release.zip
          asset_name: mira-game-linux.zip
          asset_content_type: application/zip

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/windows/windows_release.zip
          asset_name: mira-game-windows.zip
          asset_content_type: application/zip

      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/macos/macos_release.zip
          asset_name: mira-game-macos.zip
          asset_content_type: application/zip